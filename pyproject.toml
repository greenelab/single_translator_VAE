[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "single_translator_VAE"
version = "0.0.1"
description = "Single-cell and single-nucleus RNA-sequencing translation with VAE"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Adriana Ivich"},
]
maintainers = [
    {name = "Adriana Ivich", email = "adriana.ivich@cuanschutz.edu"},
]
urls.Documentation = "https://single_translator_VAE.readthedocs.io/"
urls.Source = "https://github.com/ivichadriana/single_translator_VAE"
urls.Home-page = "https://github.com/ivichadriana/single_translator_VAE"
dependencies = [
    "absl-py==2.1.0",
    "accessible-pygments==0.0.4",
    "aiohttp==3.9.5",
    "aiosignal==1.3.1",
    "alabaster==0.7.16",
    "anndata==0.10.7",
    "appnope==0.1.4",
    "array_api_compat==1.6",
    "arrow==1.3.0",
    "asttokens==2.4.1",
    "attrs==23.2.0",
    "Babel==2.14.0",
    "backports.tarfile==1.1.0",
    "beautifulsoup4==4.12.3",
    "binaryornot==0.4.4",
    "certifi==2024.2.2",
    "cffi==1.16.0",
    "cfgv==3.4.0",
    "chardet==5.2.0",
    "charset-normalizer==3.3.2",
    "chex==0.1.86",
    "click==8.1.7",
    "cloudpickle==3.0.0",
    "comm==0.2.2",
    "contextlib2==21.6.0",
    "contourpy==1.2.1",
    "cookiecutter==2.6.0",
    "coverage==7.4.4",
    "cruft==2.15.0",
    "cycler==0.12.1",
    "debugpy==1.8.1",
    "decorator==5.1.1",
    "distlib==0.3.8",
    "dnspython==2.6.1",
    "docrep==0.3.2",
    "docutils==0.20.1",
    "etils",
    "executing==2.0.1",
    "fastjsonschema==2.19.1",
    "filelock==3.13.4",
    "flax==0.8.2",
    "fonttools==4.51.0",
    "frozenlist==1.4.1",
    "fsspec==2024.3.1",
    "future==1.0.0",
    "gitdb==4.0.11",
    "GitPython==3.1.43",
    "grpcio==1.62.2",
    "h5py==3.11.0",
    "hyperopt==0.1.2",
    "identify==2.5.35",
    "idna==3.7",
    "imagesize==1.4.1",
    "importlib_metadata==7.1.0",
    "importlib_resources==6.4.0",
    "iniconfig==2.0.0",
    "ipykernel==6.29.4",
    "ipython",
    "ipywidgets==8.1.2",
    "jaraco.classes==3.4.0",
    "jaraco.context==5.3.0",
    "jaraco.functools==4.0.1",
    "jax==0.4.26",
    "jaxlib==0.4.26",
    "jedi==0.19.1",
    "Jinja2==3.1.3",
    "joblib==1.4.0",
    "jsonschema==4.21.1",
    "jsonschema-specifications==2023.12.1",
    "jupyter-cache==1.0.0",
    "jupyter_client==8.6.1",
    "jupyter_core==5.7.2",
    "jupyterlab_widgets==3.0.10",
    "keyring==25.1.0",
    "kiwisolver==1.4.5",
    "latexcodec==3.0.0",
    "legacy-api-wrap==1.4",
    "lightning==2.1.4",
    "lightning-utilities==0.11.2",
    "llvmlite==0.42.0",
    "Markdown==3.6",
    "markdown-it-py==3.0.0",
    "MarkupSafe==2.1.5",
    "matplotlib==3.8.4",
    "matplotlib-inline==0.1.7",
    "mdit-py-plugins==0.4.0",
    "mdurl==0.1.2",
    "ml-dtypes==0.4.0",
    "ml_collections==0.1.1",
    "more-itertools==10.2.0",
    "mpmath==1.3.0",
    "msgpack==1.0.8",
    "mudata==0.2.3",
    "multidict==6.0.5",
    "multipledispatch==1.0.0",
    "myst-nb==1.1.0",
    "myst-parser==2.0.0",
    "natsort==8.4.0",
    "nbclient==0.10.0",
    "nbformat==5.10.4",
    "nest-asyncio==1.6.0",
    "networkx",
    "nh3==0.2.17",
    "nodeenv==1.8.0",
    "numba==0.59.1",
    "numpy==1.26.4",
    "numpyro==0.14.0",
    "openTSNE==1.0.1",
    "opt-einsum==3.3.0",
    "optax==0.2.2",
    "orbax-checkpoint==0.5.9",
    "packaging==24.0",
    "pandas==2.2.2",
    "parso==0.8.4",
    "patsy==0.5.6",
    "pexpect==4.9.0",
    "pillow==10.3.0",
    "pkginfo==1.10.0",
    "platformdirs==4.2.0",
    "pluggy==1.4.0",
    "pre-commit==3.7.0",
    "prompt-toolkit==3.0.43",
    "protobuf==5.26.1",
    "psutil==5.9.8",
    "ptyprocess==0.7.0",
    "pure-eval==0.2.2",
    "py4j==0.10.9.7",
    "pyarrow==16.0.0",
    "pybtex==0.24.0",
    "pybtex-docutils==1.0.3",
    "pycparser==2.22",
    "pydata-sphinx-theme==0.15.2",
    "pyDeprecate==0.3.2",
    "Pygments==2.17.2",
    "pymongo==4.8.0",
    "pynndescent==0.5.12",
    "pyparsing==3.1.2",
    "pyro-api==0.1.2",
    "pyro-ppl==1.9.0",
    "pytest==8.1.1",
    "python-dateutil==2.9.0.post0",
    "python-slugify==8.0.4",
    "pytorch-lightning==2.2.3",
    "pytz==2024.1",
    "PyYAML==6.0.1",
    "pyzmq==26.0.0",
    "ray==2.31.0",
    "readme_renderer==43.0",
    "referencing==0.34.0",
    "requests==2.31.0",
    "requests-toolbelt==1.0.0",
    "rfc3986==2.0.0",
    "rich==13.7.1",
    "rpds-py==0.18.0",
    "rpy2==3.5.16",
    "scanpy==1.10.1",
    "scikit-learn==1.4.2",
    "scikit-misc==0.4.0",
    "scipy==1.13.0",
    "scvi==0.6.8",
    "scvi-tools==1.1.5",
    "seaborn==0.13.2",
    "session_info==1.0.0",
    "shellingham==1.5.4",
    "six==1.16.0",
    "smmap==5.0.1",
    "snowballstemmer==2.2.0",
    "soupsieve==2.5",
    "Sphinx==7.3.6",
    "sphinx-autodoc-typehints==2.1.0",
    "sphinx-book-theme==1.1.2",
    "sphinx-copybutton==0.5.2",
    "sphinxcontrib-applehelp==1.0.8",
    "sphinxcontrib-bibtex==2.6.2",
    "sphinxcontrib-devhelp==1.0.6",
    "sphinxcontrib-htmlhelp==2.0.5",
    "sphinxcontrib-jsmath==1.0.1",
    "sphinxcontrib-qthelp==1.0.7",
    "sphinxcontrib-serializinghtml==1.1.10",
    "sphinxext-opengraph==0.9.1",
    "SQLAlchemy==2.0.29",
    "stack-data==0.6.3",
    "statsmodels==0.14.2",
    "stdlib-list==0.10.0",
    "sympy==1.12",
    "tabulate==0.9.0",
    "tensorboard==2.16.2",
    "tensorboard-data-server==0.7.2",
    "tensorboardX==2.6.2.2",
    "tensorstore==0.1.56",
    "text-unidecode==1.3",
    "threadpoolctl==3.4.0",
    "toolz==0.12.1",
    "torch==2.3.0",
    "torchmetrics==1.3.2",
    "torchvision==0.18.0",
    "tornado==6.4",
    "tqdm==4.66.2",
    "traitlets==5.14.2",
    "twine==5.0.0",
    "typer==0.12.3",
    "types-python-dateutil==2.9.0.20240316",
    "typing_extensions==4.11.0",
    "tzdata==2024.1",
    "tzlocal==5.2",
    "umap-learn==0.5.6",
    "urllib3==2.2.1",
    "virtualenv==20.25.3",
    "wcwidth==0.2.13",
    "Werkzeug==3.0.2",
    "widgetsnbextension==4.0.10",
    "xlrd==2.0.1",
    "yarl==1.9.4",
    "zipp==3.18.1"
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "twine>=4.0.2",
]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "sphinx-book-theme>=1.0.0",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-autodoc-typehints",
    "sphinxext-opengraph",
    # For notebooks
    "ipykernel",
    "ipython",
    "sphinx-copybutton",
    "pandas",
]
test = [
    "pytest",
    "coverage",
]

[tool.hatch.build.targets.wheel]
packages = ['src/single_translator_VAE']

[tool.coverage.run]
source = ["single_translator_VAE"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib",  # allow using test files with same name
]

[tool.ruff]
line-length = 120
src = ["src"]
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb",
]
